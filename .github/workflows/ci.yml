name: CI

on:
  push:
    branches: [master, staging]
  pull_request:
    branches: [master, staging]

env:
  POSTGRES_DB: eureka
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  SECRET: reviro
  TEST_DB_URL: postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/eureka_test

  MINIO_ROOT_USER: minioadmin
  MINIO_ROOT_PASSWORD: minioadmin
  MINIO_ENDPOINT: 127.0.0.1:9000
  MINIO_ACCESS_KEY: minioadmin
  MINIO_SECRET_KEY: minioadmin
  MINIO_BUCKET: minio-bucket
  MINIO_SECURE: false

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eureka
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Install dependencies
        run: uv sync --locked

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          timeout 60s bash -c 'until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do sleep 2; done'

      - name: Start MinIO
        run: | 
          docker run -d --name minio -p 9000:9000 -p 9001:9001 \
          -e MINIO_ROOT_USER=minioadmin \
          -e MINIO_ROOT_PASSWORD=minioadmin \
          minio/minio server /data --console-address ":9001"
      - name: Wait for MinIO
        run: |
          timeout 60s bash -c '
            until curl -f http://127.0.0.1:9000/minio/health/live; do
              echo "Waiting for MinIO..."
              sleep 2
            done'    
      

      - name: Create test database
        run: |
          PGPASSWORD=postgres psql -h 127.0.0.1 -p 5432 -U postgres -c 'CREATE DATABASE eureka_test;'

      - name: Run tests
        run: uv run pytest
        env:
          DATABASE_URL: ${{ env.TEST_DB_URL }}
          MINIO_ENDPOINT: ${{ env.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ env.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ env.MINIO_SECRET_KEY }}

          MINIO_SECURE: ${{ env.MINIO_SECURE }}
  deploy:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}