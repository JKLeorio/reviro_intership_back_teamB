"""homework submissions and reviews

Revision ID: bea0662e686e
Revises: 805dca6c851d
Create Date: 2025-06-30 15:02:33.426699

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bea0662e686e'
down_revision: Union[str, None] = '805dca6c851d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'EXPIRED', 'CANCELED', name='subscriptionstatus'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homework_submissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('homework_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('submitted_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['homework_id'], ['homeworks.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homework_reviews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('reviewed_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['homework_submissions.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('payments', sa.Column('subscription_id', sa.UUID(), nullable=False))
    op.alter_column('payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_constraint(op.f('payments_group_id_fkey'), 'payments', type_='foreignkey')
    op.create_foreign_key(None, 'payments', 'subscriptions', ['subscription_id'], ['id'], ondelete='CASCADE')
    op.drop_column('payments', 'group_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('payments', sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.create_foreign_key(op.f('payments_group_id_fkey'), 'payments', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.alter_column('payments', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('payments', 'subscription_id')
    op.drop_table('homework_reviews')
    op.drop_table('homework_submissions')
    op.drop_table('subscriptions')
    # ### end Alembic commands ###
