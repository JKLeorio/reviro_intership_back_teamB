"""models were added

Revision ID: 26729c51055a
Revises: 
Create Date: 2025-06-18 19:33:59.451077

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '26729c51055a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    pass
    # op.create_table('classrooms',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('languages',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.String(length=20), nullable=False),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('name')
    # )
    # op.create_table('levels',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('code', sa.String(length=10), nullable=False),
    # sa.Column('description', sa.String(length=100), nullable=True),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('code')
    # )
    # op.create_table('users',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('first_name', sa.String(), nullable=False),
    # sa.Column('last_name', sa.String(), nullable=False),
    # sa.Column('phone_number', sa.String(), nullable=True),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('role', sa.Enum('TEACHER', 'STUDENT', 'ADMIN', name='role'), nullable=False),
    # sa.Column('email', sa.String(length=320), nullable=False),
    # sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    # sa.Column('is_active', sa.Boolean(), nullable=False),
    # sa.Column('is_superuser', sa.Boolean(), nullable=False),
    # sa.Column('is_verified', sa.Boolean(), nullable=False),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('phone_number')
    # )
    # op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # op.create_table('courses',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.String(length=50), nullable=False),
    # sa.Column('price', sa.Float(), nullable=False),
    # sa.Column('description', sa.Text(), nullable=True),
    # sa.Column('language_id', sa.Integer(), nullable=False),
    # sa.Column('level_id', sa.Integer(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ondelete='CASCADE'),
    # sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('enrollments',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('first_name', sa.String(), nullable=False),
    # sa.Column('last_name', sa.String(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('email', sa.String(), nullable=False),
    # sa.Column('phone_number', sa.String(), nullable=False),
    # sa.Column('is_approved', sa.Boolean(), nullable=False),
    # sa.Column('course_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('groups',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('start_date', sa.Date(), nullable=False),
    # sa.Column('end_date', sa.Date(), nullable=False),
    # sa.Column('is_active', sa.Boolean(), nullable=False),
    # sa.Column('is_archived', sa.Boolean(), nullable=False),
    # sa.Column('course_id', sa.Integer(), nullable=False),
    # sa.Column('teacher_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    # sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('lessons',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('lesson_start', sa.DateTime(), nullable=False),
    # sa.Column('lesson_end', sa.DateTime(), nullable=False),
    # sa.Column('teacher_id', sa.Integer(), nullable=False),
    # sa.Column('group_id', sa.Integer(), nullable=False),
    # sa.Column('classroom_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['classroom_id'], ['classrooms.id'], ),
    # sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    # sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('payments',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('amount', sa.Float(), nullable=False),
    # sa.Column('created_at', sa.DateTime(), nullable=False),
    # sa.Column('payment_method', sa.Enum('CASH', 'CARD', 'BANK_TRANSFER', 'ONLINE', 'PROMO', name='paymentmethod'), nullable=False),
    # sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', 'REFUNDED', 'CANCELED', name='paymentstatus'), nullable=False),
    # sa.Column('currency', sa.Enum('KGS', 'RUB', 'USD', 'EUR', 'UZS', 'KZT', name='currency'), nullable=False),
    # sa.Column('group_id', sa.Integer(), nullable=False),
    # sa.Column('owner_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    # sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('student_group_association_table',
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('group_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('user_id', 'group_id')
    # )
    # op.create_table('homeworks',
    # sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('description', sa.Text(), nullable=False),
    # sa.Column('lesson_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('homeworks')
    # op.drop_table('student_group_association_table')
    # op.drop_table('payments')
    # op.drop_table('lessons')
    # op.drop_table('groups')
    # op.drop_table('enrollments')
    # op.drop_table('courses')
    # op.drop_index(op.f('ix_users_email'), table_name='users')
    # op.drop_table('users')
    # op.drop_table('levels')
    # op.drop_table('languages')
    # op.drop_table('classrooms')
    pass
    # ### end Alembic commands ###
