"""stripe

Revision ID: 6a03deec8dbd
Revises: fb952d6b2468
Create Date: 2025-08-16 15:29:12.587979

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6a03deec8dbd'
down_revision: Union[str, None] = 'fb952d6b2468'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stripe_payments')
    op.drop_constraint(op.f('payment_check_verified_by_fkey'), 'payment_check', type_='foreignkey')
    op.drop_constraint(op.f('payment_check_payment_id_fkey'), 'payment_check', type_='foreignkey')
    op.drop_column('payment_check', 'verified_by')
    op.drop_column('payment_check', 'payment_id')
    op.drop_column('payment_check', 'verification_date')
    op.drop_column('payment_check', 'verification_status')
    op.drop_column('payment_detail', 'stripe_payment_intent_id')
    op.drop_column('payment_requisites', 'is_active')
    op.add_column('payments', sa.Column('stripe_session_id', sa.String(), nullable=True))
    op.add_column('payments', sa.Column('stripe_payment_intent_id', sa.String(), nullable=True))
    op.add_column('payments', sa.Column('customer_email', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('payments', 'customer_email')
    op.drop_column('payments', 'stripe_payment_intent_id')
    op.drop_column('payments', 'stripe_session_id')
    op.add_column('payment_requisites', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('payment_detail', sa.Column('stripe_payment_intent_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('payment_check', sa.Column('verification_status', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('payment_check', sa.Column('verification_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('payment_check', sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('payment_check', sa.Column('verified_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('payment_check_payment_id_fkey'), 'payment_check', 'payments', ['payment_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('payment_check_verified_by_fkey'), 'payment_check', 'users', ['verified_by'], ['id'], ondelete='SET NULL')
    op.create_table('stripe_payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('payment_intent_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount_kgs', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('amount_usd', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('stripe_payments_course_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name=op.f('stripe_payments_student_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('stripe_payments_pkey')),
    sa.UniqueConstraint('payment_intent_id', name=op.f('stripe_payments_payment_intent_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
